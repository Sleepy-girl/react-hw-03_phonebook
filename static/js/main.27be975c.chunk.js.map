{"version":3,"sources":["components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactList/ContactList.js","components/App.js","index.js"],"names":["ContactForm","state","name","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","id","uuidv4","reset","this","type","onChange","placeholder","Component","Filter","getFilterValue","ContactList","contacts","onRemoveContact","map","contact","key","onClick","App","filter","addToContacts","objectContact","find","alert","prevState","getFilteredData","toLowerCase","includes","removeContact","console","log","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27be975c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit({ id: uuidv4(), name, number });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleInputChange}\n              placeholder=\"...\"\n            />\n          </label>\n          <label>\n            Number:\n            <input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleInputChange}\n              placeholder=\"...\"\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\n\nfunction Filter({ getFilterValue, value }) {\n  return (\n    <>\n      <h3>\n        Find contacts by name:\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={getFilterValue}\n          value={value}\n          placeholder=\"...\"\n        />\n      </h3>\n    </>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\n\nfunction ContactList({ contacts, onRemoveContact }) {\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport ContactForm from './contactForm/ContactForm';\nimport Filter from './filter/Filter';\nimport ContactList from './contactList/ContactList';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    console.log('Contact componentDidMount');\n    // console.log(localStorage.getItem('contacts'));\n    const persistedContacts = localStorage.getItem('contacts');\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Contact componentDidUpdate'); // вызывается каждый раз при смене состояния state\n    // console.log('prevState', prevState);\n    // console.log('this.state', this.state);\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addToContacts = objectContact => {\n    this.state.contacts.find(contact => contact.name === objectContact.name)\n      ? alert(`${objectContact.name} is already in contacts.`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, objectContact],\n          };\n        });\n  };\n\n  getFilterValue = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredData = e => {\n    return this.state.filter\n      ? this.state.contacts.filter(contact =>\n          contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n        )\n      : this.state.contacts;\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  render() {\n    console.log('App Render');\n\n    const filter = this.state.filter;\n    const contacts = this.state.contacts;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addToContacts} />\n        {contacts.length > 0 ? (\n          <div>\n            <h2>Contacts</h2>\n            <Filter getFilterValue={this.getFilterValue} value={filter} />\n            <ContactList\n              contacts={this.getFilteredData()}\n              onRemoveContact={this.removeContact}\n            />\n          </div>\n        ) : (\n          <h2>Your phonebook is empty, please add your first contact</h2>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}